---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <div class="flex flex-col h-screen p-4 gap-4">
    <!-- Zone principale avec affichage et code -->
    <div class="flex flex-1 gap-4">
      <!-- Affichage SVG -->
      <div
        id="svg-container"
        class="flex-1 border rounded-xl p-4 bg-base-200 flex items-center justify-center"
      >
        <span class="text-gray-400">SVG généré apparaîtra ici</span>
      </div>

      <!-- Code généré -->
      <div class="flex-1 border rounded-xl p-4 bg-base-200 overflow-auto">
        <pre id="svg-output" class="whitespace-pre-wrap text-sm text-primary">
        </pre>
      </div>
    </div>

    <!-- Zone du prompt -->
    <div class="border rounded-xl p-4 bg-base-100 flex gap-2">
      <textarea
        id="user-prompt"
        placeholder="Décris ton SVG (ex: a red car)"
        class="textarea textarea-bordered flex-1 resize-none"></textarea>
      <button id="generate-button" class="btn btn-primary">Générer</button>
      <button id="save-button" class="btn btn-secondary">Enregistrer</button>
    </div>
  </div>
</Layout>

<script>
  //@ts-nocheck

  async function generateSVG(prompt) {
    console.log("Generating SVG for prompt:", prompt);
    const res = await fetch("/api/generateSVG", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ prompt }),
    });
    const data = await res.json();
    return data.svg;
  }

  async function handleSubmit() {
    const promptElement = document.getElementById("user-prompt");
    const svgContainer = document.getElementById("svg-container");
    const svgOutput = document.getElementById("svg-output");
    const generateButton = document.getElementById("generate-button");

    let prompt = promptElement ? promptElement.value : "";
    console.log("submitted: ", prompt);

    // --- spinner + désactivation du bouton ---
    svgContainer.innerHTML = `<span class="loading loading-ring loading-xl"></span>`;
    svgOutput.textContent = "";
    generateButton.disabled = true;

    try {
      // appel à l'API backend
      const svgCode = await generateSVG(prompt);
      console.log("svgCode: ", svgCode);

      // affichage du code et du rendu
      svgOutput.textContent = svgCode;
      svgContainer.innerHTML = svgCode;
      generateButton.disabled = false;
    } catch (error) {
      console.error(error);
      svgContainer.innerHTML = `<span class="loading loading-ring loading-xl"></span>`;
      generateButton.disabled = true;
    }
  }

  const generateButton = document.getElementById("generate-button");
  if (generateButton) {
    generateButton.addEventListener("click", handleSubmit);
  }

  const saveButton = document.getElementById("save-button");

  async function handleSave() {
    const name = prompt("Nom du SVG à enregistrer ?");
    if (!name) return;

    const svgOutput = document.getElementById("svg-output").textContent;
    if (!svgOutput) {
      alert("Aucun SVG à enregistrer !");
      return;
    }

    try {
      const res = await fetch(
        "http://127.0.0.1:8090/api/collections/svgs/records",
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            // "Authorization": "Bearer YOUR_POCKETBASE_API_KEY" // si ta collection nécessite un token
          },
          body: JSON.stringify({
            name: name,
            svg: svgOutput,
          }),
        }
      );

      if (res.ok) {
        alert("SVG enregistré !");
      } else {
        const errorData = await res.json();
        console.error(errorData);
        alert("Erreur lors de l'enregistrement");
      }
    } catch (err) {
      console.error(err);
      alert("Erreur réseau");
    }
  }

  if (saveButton) saveButton.addEventListener("click", handleSave);
</script>
